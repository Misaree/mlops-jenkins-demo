pipeline {
    agent any
    
    environment {
        DOCKER_IMAGE_NAME = "ml-flask-app"
        GIT_COMMIT_SHORT = "${env.GIT_COMMIT.take(8)}"
    }
    
    stages {
        stage('Git Checkout') {
            steps {
                checkout scm
                echo "Building from GitHub commit: ${GIT_COMMIT_SHORT}"
                bat 'git log -1 --oneline'
            }
        }
        
        stage('Show Project Structure') {
            steps {
                bat 'dir'
                bat 'type Dockerfile || echo "No Dockerfile found"'
                bat 'type docker-compose.yml || echo "No docker-compose.yml found"'
            }
        }
        
        stage('Create Requirements') {
            steps {
                bat '''
                    echo # MLOps Practical - Generated by Jenkins > requirements.txt
                    echo flask==2.3.3 >> requirements.txt
                    echo numpy==1.24.3 >> requirements.txt
                    echo scikit-learn==1.3.0 >> requirements.txt
                    echo "Requirements file created!"
                '''
            }
        }
        
        stage('Build & Deploy') {
            steps {
                bat 'docker-compose down || echo "No running containers to stop"'
                bat 'docker-compose build --no-cache'
                bat 'docker-compose up -d'
            }
        }
        
        
        stage('Test ML Model API') {
            steps {
                bat '''
                    echo "Testing ML Model API..."
                    curl -X GET http://localhost:5000 || echo "Web server is running!"
                '''
            }
        }
    }
    
}